[package]
name = "kube"
version = "0.55.0"
description = "Kubernetes client and futures controller runtime"
authors = [
  "clux <sszynrae@gmail.com>",
  "Teo Klestrup RÃ¶ijezon <teo@nullable.se>",
  "kazk <kazk.dev@gmail.com>",
  "ynqa <un.pensiero.vano@gmail.com>",
]
license = "Apache-2.0"
repository = "https://github.com/clux/kube-rs"
readme = "../README.md"
keywords = ["kubernetes", "client", "runtime", "reflector", "informer"]
categories = ["web-programming::http-client"]
edition = "2018"

[features]
default = ["native-tls"]
native-tls = ["client", "openssl", "hyper-tls", "tokio-native-tls"]
rustls-tls = ["client", "hyper-rustls", "tokio-rustls"]
ws = ["client", "tokio-tungstenite", "rand", "kube-core/ws"]
oauth = ["client", "tame-oauth"]
gzip = ["client", "async-compression"]
client = ["__config", "__non_core", "hyper", "tower", "hyper-timeout", "pin-project", "chrono", "jsonpath_lib", "bytes", "futures", "tokio", "tokio-util", "either"]
jsonpatch = ["kube-core/jsonpatch"]
admission = ["kube-core/admission"]
derive = ["kube-derive"]

# private feature sets; do not use
__config = ["pem", "dirs"]
__non_core = ["tracing", "serde_yaml", "base64"]

[package.metadata.docs.rs]
features = ["derive", "ws", "oauth", "jsonpatch", "admission"]
# Define the configuration attribute `docsrs`. Used to enable `doc_cfg` feature.
rustdoc-args = ["--cfg", "docsrs"]

[dependencies]
base64 = { version = "0.13.0", optional = true }
chrono = { version = "0.4.19", optional = true }
dirs = { package = "dirs-next", optional = true, version = "2.0.0" }
serde = { version = "1.0.118", features = ["derive"] }
serde_json = "1.0.61"
serde_yaml = { version = "0.8.17", optional = true }
http = "0.2.2"
url = "2.2.0"
either = { version = "1.6.1", optional = true }
thiserror = "1.0.23"
futures = { version = "0.3.8", optional = true }
pem = { version = "0.8.2", optional = true }
openssl = { version = "0.10.32", optional = true }
tokio-native-tls = { version = "0.3.0", optional = true }
tokio-rustls = { version = "0.22.0", features = ["dangerous_configuration"], optional = true }
bytes = { version = "1.0.0", optional = true }
tokio = { version = "1.0.1", features = ["time", "signal", "sync"], optional = true }
static_assertions = "1.1.0"
kube-derive = { path = "../kube-derive", version = "^0.55.0", optional = true }
kube-core = { path = "../kube-core", version = "^0.55.0"}
jsonpath_lib = { version = "0.2.6", optional = true }
tokio-util = { version = "0.6.0", optional = true, features = ["io", "codec"] }
hyper = { version = "0.14.2", optional = true, features = ["client", "http1", "stream", "tcp"] }
hyper-tls = { version = "0.5.0", optional = true }
hyper-rustls = { version = "0.22.1", optional = true }
tokio-tungstenite = { version = "0.14.0", optional = true }
tower = { version = "0.4.6", optional = true, features = ["buffer", "util"] }
async-compression = { version = "0.3.7", features = ["gzip", "tokio"], optional = true }
hyper-timeout = {version = "0.4.1", optional = true }
tame-oauth = { version = "0.4.7", features = ["gcp"], optional = true }
pin-project = { version = "1.0.4", optional = true }
rand = { version = "0.8.3", optional = true }
tracing = { version = "0.1.25", features = ["log"], optional = true }

[dependencies.k8s-openapi]
version = "0.11.0"
default-features = false
features = []

[dev-dependencies]
tempfile = "3.1.0"
tokio = { version = "1.0.1", features = ["full"] }
schemars = "0.8.0"
tokio-test = "0.4.0"
tower-test = "0.4.0"

[dev-dependencies.k8s-openapi]
version = "0.11.0"
default-features = false
features = ["v1_20"]
