version: 2.1

orbs:
  win: circleci/windows@2.4.0
  k8s: circleci/kubernetes@0.11.0

workflows:
  version: 2
  all_jobs:
    jobs: []
      #- cargo_test
      # windows executor costs money :/
      #- windows_test
      # kubernetes flow:
      #- kind_compile
      #- kind_k8s:
      #    requires:
      #      - kind_compile
      #    filters:
      #      branches:
      #        ignore:
      #          - master

docker_login: &docker_login
  # Optional auth (wont work on pr builds, but we don't need this)
  run:
    name: authentication
    command: |
      docker --version
      docker login -u "$DOCKER_USER" -p "$DOCKER_PASS" || true

jobs:
  kind_compile:
    docker:
      - image: clux/muslrust:stable
    working_directory: /volume
    steps:
      - checkout
      # Cache is based on whether we changed dependencies:
      - run: grep "\[dependencies\]" -A 9000 kube/Cargo.toml > deps_checksum
      - restore_cache:
          keys:
            - cache-musl-{{ checksum "deps_checksum" }}-2
      - run: cargo build -p tests --release
      - save_cache:
          paths:
            - /root/.cargo/registry
            - target
          key: cache-musl-{{ checksum "deps_checksum" }}-2
      - persist_to_workspace:
          root: target/x86_64-unknown-linux-musl/release/
          paths:
            - dapp

  kind_k8s:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - attach_workspace:
          at: tests/
      - <<: *docker_login
      - run: curl -sSL https://github.com/kubernetes-sigs/kind/releases/download/v0.8.1/kind-linux-amd64 -o kind
      - run: chmod +x ./kind
      - run: ./kind create cluster
      - run: make integration-ci
      - k8s/install-kubectl
      - k8s/install-kubeconfig
      - k8s/create-or-update-resource:
          namespace: apps
          resource-file-path: tests/deployment.yaml
          show-kubectl-command: true
      - k8s/get-rollout-status:
          namespace: apps
          resource-name: deployment/dapp
          show-kubectl-command: true
          watch-rollout-status: true
          watch-timeout: 3m
      - run: kubectl get all -n apps
      - run: kubectl describe deploy dapp -n apps
      - run: kubectl wait --for=condition=Completed deploy/dapp -n apps --timeout=60s || kubectl logs -f deploy/dapp -p -n apps
      - run: kubectl get all -n apps

  cargo_test:
    docker:
      - image: circleci/rust:latest
    environment:
      - CARGO_INCREMENTAL: 0
    steps:
      - checkout
      # Cache is based on whether we changed dependencies:
      - run: grep "\[dependencies\]" -A 9000 kube/Cargo.toml > deps_checksum
      - restore_cache:
          keys:
            - cache-{{ checksum "deps_checksum" }}
      - run: cargo build
      - run: cargo test -p kube-runtime
      - run: cargo test -p kube
      - run: cargo test -p kube-derive
      - run: cargo test -p kube-core
      - run: cargo test -p kube --lib --no-default-features --features=config
      - run: cargo test --lib --all -j4
      - run: cargo test --doc --all -j4
      - run: cargo test -j4 -p examples
      - run: cd examples && cargo build --examples
      - run: cd examples && cargo test --example crd_derive_no_schema --no-default-features --features=native-tls
      - run: cd kube && cargo test --lib --no-default-features --features=rustls-tls,ws,oauth
      - run: cd kube && cargo test --lib --no-default-features --features=native-tls,ws,oauth
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: cache-{{ checksum "deps_checksum" }}

  windows_test:
    environment:
      - CARGO_INCREMENTAL: 0
      - CARGO_BUILD_TARGET: "x86_64-pc-windows-msvc"
    executor:
      name: win/default
      shell: bash.exe
    steps:
      - checkout
      - run:
          name: "HACK: remove gitconfig to prevent ssh fetches from cargo"
          command: rm ~/.gitconfig
      - run: curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain stable --target $CARGO_BUILD_TARGET
      - run: echo 'export PATH="$HOME/.cargo/bin:$PATH"' >> $BASH_ENV
      - run: grep "\[dependencies\]" -A 9000 kube/Cargo.toml > deps_checksum
      - restore_cache:
          keys:
            - cache-{{ checksum "deps_checksum" }}
      - run: cargo build
      - run: cargo test -p kube-runtime
      - run: cargo test -p kube
      - run: cargo test -p kube-derive
      - run: cargo test -p kube-core
      - run: cargo test --lib --all -j4
      - run: cargo test --doc --all -j4
      - run: cargo test -j4 -p examples
      - run: cd kube && cargo test --lib --no-default-features --features=rustls-tls
      - save_cache:
          paths:
            - "$HOME/.cargo/registry"
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: cache-{{ checksum "deps_checksum" }}
